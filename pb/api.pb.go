// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/pb/api.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TxStatus int32

const (
	TxStatus_REJECTED TxStatus = 0
	//INSUFFICIENT_FUNDS = 1;
	//CONFLICTING = 2;
	TxStatus_PENDING TxStatus = 3
	//PROCESSING = 4;
	//APPROVED = 5;
	TxStatus_CONFIRMED TxStatus = 6
)

var TxStatus_name = map[int32]string{
	0: "REJECTED",
	3: "PENDING",
	6: "CONFIRMED",
}

var TxStatus_value = map[string]int32{
	"REJECTED":  0,
	"PENDING":   3,
	"CONFIRMED": 6,
}

func (x TxStatus) String() string {
	return proto.EnumName(TxStatus_name, int32(x))
}

func (TxStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{0}
}

type SimpleMessage struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleMessage) Reset()         { *m = SimpleMessage{} }
func (m *SimpleMessage) String() string { return proto.CompactTextString(m) }
func (*SimpleMessage) ProtoMessage()    {}
func (*SimpleMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{0}
}

func (m *SimpleMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleMessage.Unmarshal(m, b)
}
func (m *SimpleMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleMessage.Marshal(b, m, deterministic)
}
func (m *SimpleMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleMessage.Merge(m, src)
}
func (m *SimpleMessage) XXX_Size() int {
	return xxx_messageInfo_SimpleMessage.Size(m)
}
func (m *SimpleMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleMessage proto.InternalMessageInfo

func (m *SimpleMessage) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TxConfirmation struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxConfirmation) Reset()         { *m = TxConfirmation{} }
func (m *TxConfirmation) String() string { return proto.CompactTextString(m) }
func (*TxConfirmation) ProtoMessage()    {}
func (*TxConfirmation) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{1}
}

func (m *TxConfirmation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxConfirmation.Unmarshal(m, b)
}
func (m *TxConfirmation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxConfirmation.Marshal(b, m, deterministic)
}
func (m *TxConfirmation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxConfirmation.Merge(m, src)
}
func (m *TxConfirmation) XXX_Size() int {
	return xxx_messageInfo_TxConfirmation.Size(m)
}
func (m *TxConfirmation) XXX_DiscardUnknown() {
	xxx_messageInfo_TxConfirmation.DiscardUnknown(m)
}

var xxx_messageInfo_TxConfirmation proto.InternalMessageInfo

func (m *TxConfirmation) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TxConfirmation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TransactionId struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionId) Reset()         { *m = TransactionId{} }
func (m *TransactionId) String() string { return proto.CompactTextString(m) }
func (*TransactionId) ProtoMessage()    {}
func (*TransactionId) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{2}
}

func (m *TransactionId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionId.Unmarshal(m, b)
}
func (m *TransactionId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionId.Marshal(b, m, deterministic)
}
func (m *TransactionId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionId.Merge(m, src)
}
func (m *TransactionId) XXX_Size() int {
	return xxx_messageInfo_TransactionId.Size(m)
}
func (m *TransactionId) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionId.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionId proto.InternalMessageInfo

func (m *TransactionId) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type Transaction struct {
	TxId                 *TransactionId `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	Sender               *AccountId     `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver             *AccountId     `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Amount               uint64         `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Fee                  uint64         `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`
	Status               TxStatus       `protobuf:"varint,6,opt,name=status,proto3,enum=pb.TxStatus" json:"status,omitempty"`
	LayerId              uint64         `protobuf:"varint,7,opt,name=layerId,proto3" json:"layerId,omitempty"`
	Timestamp            uint64         `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{3}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetTxId() *TransactionId {
	if m != nil {
		return m.TxId
	}
	return nil
}

func (m *Transaction) GetSender() *AccountId {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Transaction) GetReceiver() *AccountId {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *Transaction) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Transaction) GetFee() uint64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *Transaction) GetStatus() TxStatus {
	if m != nil {
		return m.Status
	}
	return TxStatus_REJECTED
}

func (m *Transaction) GetLayerId() uint64 {
	if m != nil {
		return m.LayerId
	}
	return 0
}

func (m *Transaction) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type AccountId struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountId) Reset()         { *m = AccountId{} }
func (m *AccountId) String() string { return proto.CompactTextString(m) }
func (*AccountId) ProtoMessage()    {}
func (*AccountId) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{4}
}

func (m *AccountId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountId.Unmarshal(m, b)
}
func (m *AccountId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountId.Marshal(b, m, deterministic)
}
func (m *AccountId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountId.Merge(m, src)
}
func (m *AccountId) XXX_Size() int {
	return xxx_messageInfo_AccountId.Size(m)
}
func (m *AccountId) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountId.DiscardUnknown(m)
}

var xxx_messageInfo_AccountId proto.InternalMessageInfo

func (m *AccountId) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type TransferFunds struct {
	Sender               *AccountId `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver             *AccountId `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Nonce                uint64     `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Amount               uint64     `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TransferFunds) Reset()         { *m = TransferFunds{} }
func (m *TransferFunds) String() string { return proto.CompactTextString(m) }
func (*TransferFunds) ProtoMessage()    {}
func (*TransferFunds) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{5}
}

func (m *TransferFunds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferFunds.Unmarshal(m, b)
}
func (m *TransferFunds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferFunds.Marshal(b, m, deterministic)
}
func (m *TransferFunds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferFunds.Merge(m, src)
}
func (m *TransferFunds) XXX_Size() int {
	return xxx_messageInfo_TransferFunds.Size(m)
}
func (m *TransferFunds) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferFunds.DiscardUnknown(m)
}

var xxx_messageInfo_TransferFunds proto.InternalMessageInfo

func (m *TransferFunds) GetSender() *AccountId {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *TransferFunds) GetReceiver() *AccountId {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *TransferFunds) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TransferFunds) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type InitPost struct {
	LogicalDrive         string   `protobuf:"bytes,1,opt,name=logicalDrive,proto3" json:"logicalDrive,omitempty"`
	CommitmentSize       uint64   `protobuf:"varint,2,opt,name=commitmentSize,proto3" json:"commitmentSize,omitempty"`
	Coinbase             string   `protobuf:"bytes,3,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitPost) Reset()         { *m = InitPost{} }
func (m *InitPost) String() string { return proto.CompactTextString(m) }
func (*InitPost) ProtoMessage()    {}
func (*InitPost) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{6}
}

func (m *InitPost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitPost.Unmarshal(m, b)
}
func (m *InitPost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitPost.Marshal(b, m, deterministic)
}
func (m *InitPost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitPost.Merge(m, src)
}
func (m *InitPost) XXX_Size() int {
	return xxx_messageInfo_InitPost.Size(m)
}
func (m *InitPost) XXX_DiscardUnknown() {
	xxx_messageInfo_InitPost.DiscardUnknown(m)
}

var xxx_messageInfo_InitPost proto.InternalMessageInfo

func (m *InitPost) GetLogicalDrive() string {
	if m != nil {
		return m.LogicalDrive
	}
	return ""
}

func (m *InitPost) GetCommitmentSize() uint64 {
	if m != nil {
		return m.CommitmentSize
	}
	return 0
}

func (m *InitPost) GetCoinbase() string {
	if m != nil {
		return m.Coinbase
	}
	return ""
}

type SignedTransaction struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedTransaction) Reset()         { *m = SignedTransaction{} }
func (m *SignedTransaction) String() string { return proto.CompactTextString(m) }
func (*SignedTransaction) ProtoMessage()    {}
func (*SignedTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{7}
}

func (m *SignedTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedTransaction.Unmarshal(m, b)
}
func (m *SignedTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedTransaction.Marshal(b, m, deterministic)
}
func (m *SignedTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedTransaction.Merge(m, src)
}
func (m *SignedTransaction) XXX_Size() int {
	return xxx_messageInfo_SignedTransaction.Size(m)
}
func (m *SignedTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_SignedTransaction proto.InternalMessageInfo

func (m *SignedTransaction) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

type EligibleLayers struct {
	Layers               []uint64 `protobuf:"varint,1,rep,packed,name=layers,proto3" json:"layers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EligibleLayers) Reset()         { *m = EligibleLayers{} }
func (m *EligibleLayers) String() string { return proto.CompactTextString(m) }
func (*EligibleLayers) ProtoMessage()    {}
func (*EligibleLayers) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{8}
}

func (m *EligibleLayers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EligibleLayers.Unmarshal(m, b)
}
func (m *EligibleLayers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EligibleLayers.Marshal(b, m, deterministic)
}
func (m *EligibleLayers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EligibleLayers.Merge(m, src)
}
func (m *EligibleLayers) XXX_Size() int {
	return xxx_messageInfo_EligibleLayers.Size(m)
}
func (m *EligibleLayers) XXX_DiscardUnknown() {
	xxx_messageInfo_EligibleLayers.DiscardUnknown(m)
}

var xxx_messageInfo_EligibleLayers proto.InternalMessageInfo

func (m *EligibleLayers) GetLayers() []uint64 {
	if m != nil {
		return m.Layers
	}
	return nil
}

type BroadcastMessage struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BroadcastMessage) Reset()         { *m = BroadcastMessage{} }
func (m *BroadcastMessage) String() string { return proto.CompactTextString(m) }
func (*BroadcastMessage) ProtoMessage()    {}
func (*BroadcastMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{9}
}

func (m *BroadcastMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BroadcastMessage.Unmarshal(m, b)
}
func (m *BroadcastMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BroadcastMessage.Marshal(b, m, deterministic)
}
func (m *BroadcastMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadcastMessage.Merge(m, src)
}
func (m *BroadcastMessage) XXX_Size() int {
	return xxx_messageInfo_BroadcastMessage.Size(m)
}
func (m *BroadcastMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadcastMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BroadcastMessage proto.InternalMessageInfo

func (m *BroadcastMessage) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type BinaryMessage struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BinaryMessage) Reset()         { *m = BinaryMessage{} }
func (m *BinaryMessage) String() string { return proto.CompactTextString(m) }
func (*BinaryMessage) ProtoMessage()    {}
func (*BinaryMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{10}
}

func (m *BinaryMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryMessage.Unmarshal(m, b)
}
func (m *BinaryMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryMessage.Marshal(b, m, deterministic)
}
func (m *BinaryMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryMessage.Merge(m, src)
}
func (m *BinaryMessage) XXX_Size() int {
	return xxx_messageInfo_BinaryMessage.Size(m)
}
func (m *BinaryMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryMessage proto.InternalMessageInfo

func (m *BinaryMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CommitmentSizeMessage struct {
	MbCommitted          uint64   `protobuf:"varint,1,opt,name=mbCommitted,proto3" json:"mbCommitted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitmentSizeMessage) Reset()         { *m = CommitmentSizeMessage{} }
func (m *CommitmentSizeMessage) String() string { return proto.CompactTextString(m) }
func (*CommitmentSizeMessage) ProtoMessage()    {}
func (*CommitmentSizeMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{11}
}

func (m *CommitmentSizeMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitmentSizeMessage.Unmarshal(m, b)
}
func (m *CommitmentSizeMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitmentSizeMessage.Marshal(b, m, deterministic)
}
func (m *CommitmentSizeMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitmentSizeMessage.Merge(m, src)
}
func (m *CommitmentSizeMessage) XXX_Size() int {
	return xxx_messageInfo_CommitmentSizeMessage.Size(m)
}
func (m *CommitmentSizeMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitmentSizeMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CommitmentSizeMessage proto.InternalMessageInfo

func (m *CommitmentSizeMessage) GetMbCommitted() uint64 {
	if m != nil {
		return m.MbCommitted
	}
	return 0
}

type LogicalDriveMessage struct {
	LogicalDrive         string   `protobuf:"bytes,1,opt,name=logicalDrive,proto3" json:"logicalDrive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogicalDriveMessage) Reset()         { *m = LogicalDriveMessage{} }
func (m *LogicalDriveMessage) String() string { return proto.CompactTextString(m) }
func (*LogicalDriveMessage) ProtoMessage()    {}
func (*LogicalDriveMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{12}
}

func (m *LogicalDriveMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogicalDriveMessage.Unmarshal(m, b)
}
func (m *LogicalDriveMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogicalDriveMessage.Marshal(b, m, deterministic)
}
func (m *LogicalDriveMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogicalDriveMessage.Merge(m, src)
}
func (m *LogicalDriveMessage) XXX_Size() int {
	return xxx_messageInfo_LogicalDriveMessage.Size(m)
}
func (m *LogicalDriveMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_LogicalDriveMessage.DiscardUnknown(m)
}

var xxx_messageInfo_LogicalDriveMessage proto.InternalMessageInfo

func (m *LogicalDriveMessage) GetLogicalDrive() string {
	if m != nil {
		return m.LogicalDrive
	}
	return ""
}

type MiningStats struct {
	DataDir              string   `protobuf:"bytes,1,opt,name=dataDir,proto3" json:"dataDir,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Coinbase             string   `protobuf:"bytes,3,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	RemainingBytes       uint64   `protobuf:"varint,4,opt,name=remainingBytes,proto3" json:"remainingBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MiningStats) Reset()         { *m = MiningStats{} }
func (m *MiningStats) String() string { return proto.CompactTextString(m) }
func (*MiningStats) ProtoMessage()    {}
func (*MiningStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{13}
}

func (m *MiningStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MiningStats.Unmarshal(m, b)
}
func (m *MiningStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MiningStats.Marshal(b, m, deterministic)
}
func (m *MiningStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MiningStats.Merge(m, src)
}
func (m *MiningStats) XXX_Size() int {
	return xxx_messageInfo_MiningStats.Size(m)
}
func (m *MiningStats) XXX_DiscardUnknown() {
	xxx_messageInfo_MiningStats.DiscardUnknown(m)
}

var xxx_messageInfo_MiningStats proto.InternalMessageInfo

func (m *MiningStats) GetDataDir() string {
	if m != nil {
		return m.DataDir
	}
	return ""
}

func (m *MiningStats) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MiningStats) GetCoinbase() string {
	if m != nil {
		return m.Coinbase
	}
	return ""
}

func (m *MiningStats) GetRemainingBytes() uint64 {
	if m != nil {
		return m.RemainingBytes
	}
	return 0
}

type SetLogLevel struct {
	LoggerName           string   `protobuf:"bytes,1,opt,name=loggerName,proto3" json:"loggerName,omitempty"`
	Severity             string   `protobuf:"bytes,2,opt,name=severity,proto3" json:"severity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetLogLevel) Reset()         { *m = SetLogLevel{} }
func (m *SetLogLevel) String() string { return proto.CompactTextString(m) }
func (*SetLogLevel) ProtoMessage()    {}
func (*SetLogLevel) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{14}
}

func (m *SetLogLevel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetLogLevel.Unmarshal(m, b)
}
func (m *SetLogLevel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetLogLevel.Marshal(b, m, deterministic)
}
func (m *SetLogLevel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetLogLevel.Merge(m, src)
}
func (m *SetLogLevel) XXX_Size() int {
	return xxx_messageInfo_SetLogLevel.Size(m)
}
func (m *SetLogLevel) XXX_DiscardUnknown() {
	xxx_messageInfo_SetLogLevel.DiscardUnknown(m)
}

var xxx_messageInfo_SetLogLevel proto.InternalMessageInfo

func (m *SetLogLevel) GetLoggerName() string {
	if m != nil {
		return m.LoggerName
	}
	return ""
}

func (m *SetLogLevel) GetSeverity() string {
	if m != nil {
		return m.Severity
	}
	return ""
}

type AccountTxs struct {
	Txs                  []string `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	ValidatedLayer       uint64   `protobuf:"varint,2,opt,name=validatedLayer,proto3" json:"validatedLayer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountTxs) Reset()         { *m = AccountTxs{} }
func (m *AccountTxs) String() string { return proto.CompactTextString(m) }
func (*AccountTxs) ProtoMessage()    {}
func (*AccountTxs) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{15}
}

func (m *AccountTxs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountTxs.Unmarshal(m, b)
}
func (m *AccountTxs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountTxs.Marshal(b, m, deterministic)
}
func (m *AccountTxs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountTxs.Merge(m, src)
}
func (m *AccountTxs) XXX_Size() int {
	return xxx_messageInfo_AccountTxs.Size(m)
}
func (m *AccountTxs) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountTxs.DiscardUnknown(m)
}

var xxx_messageInfo_AccountTxs proto.InternalMessageInfo

func (m *AccountTxs) GetTxs() []string {
	if m != nil {
		return m.Txs
	}
	return nil
}

func (m *AccountTxs) GetValidatedLayer() uint64 {
	if m != nil {
		return m.ValidatedLayer
	}
	return 0
}

type GetTxsSinceLayer struct {
	StartLayer           uint64     `protobuf:"varint,1,opt,name=startLayer,proto3" json:"startLayer,omitempty"`
	Account              *AccountId `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetTxsSinceLayer) Reset()         { *m = GetTxsSinceLayer{} }
func (m *GetTxsSinceLayer) String() string { return proto.CompactTextString(m) }
func (*GetTxsSinceLayer) ProtoMessage()    {}
func (*GetTxsSinceLayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{16}
}

func (m *GetTxsSinceLayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTxsSinceLayer.Unmarshal(m, b)
}
func (m *GetTxsSinceLayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTxsSinceLayer.Marshal(b, m, deterministic)
}
func (m *GetTxsSinceLayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTxsSinceLayer.Merge(m, src)
}
func (m *GetTxsSinceLayer) XXX_Size() int {
	return xxx_messageInfo_GetTxsSinceLayer.Size(m)
}
func (m *GetTxsSinceLayer) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTxsSinceLayer.DiscardUnknown(m)
}

var xxx_messageInfo_GetTxsSinceLayer proto.InternalMessageInfo

func (m *GetTxsSinceLayer) GetStartLayer() uint64 {
	if m != nil {
		return m.StartLayer
	}
	return 0
}

func (m *GetTxsSinceLayer) GetAccount() *AccountId {
	if m != nil {
		return m.Account
	}
	return nil
}

type Reward struct {
	Layer                uint64   `protobuf:"varint,1,opt,name=layer,proto3" json:"layer,omitempty"`
	TotalReward          uint64   `protobuf:"varint,2,opt,name=totalReward,proto3" json:"totalReward,omitempty"`
	LayerRewardEstimate  uint64   `protobuf:"varint,3,opt,name=layerRewardEstimate,proto3" json:"layerRewardEstimate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reward) Reset()         { *m = Reward{} }
func (m *Reward) String() string { return proto.CompactTextString(m) }
func (*Reward) ProtoMessage()    {}
func (*Reward) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{17}
}

func (m *Reward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reward.Unmarshal(m, b)
}
func (m *Reward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reward.Marshal(b, m, deterministic)
}
func (m *Reward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reward.Merge(m, src)
}
func (m *Reward) XXX_Size() int {
	return xxx_messageInfo_Reward.Size(m)
}
func (m *Reward) XXX_DiscardUnknown() {
	xxx_messageInfo_Reward.DiscardUnknown(m)
}

var xxx_messageInfo_Reward proto.InternalMessageInfo

func (m *Reward) GetLayer() uint64 {
	if m != nil {
		return m.Layer
	}
	return 0
}

func (m *Reward) GetTotalReward() uint64 {
	if m != nil {
		return m.TotalReward
	}
	return 0
}

func (m *Reward) GetLayerRewardEstimate() uint64 {
	if m != nil {
		return m.LayerRewardEstimate
	}
	return 0
}

type AccountRewards struct {
	Rewards              []*Reward `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AccountRewards) Reset()         { *m = AccountRewards{} }
func (m *AccountRewards) String() string { return proto.CompactTextString(m) }
func (*AccountRewards) ProtoMessage()    {}
func (*AccountRewards) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{18}
}

func (m *AccountRewards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountRewards.Unmarshal(m, b)
}
func (m *AccountRewards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountRewards.Marshal(b, m, deterministic)
}
func (m *AccountRewards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountRewards.Merge(m, src)
}
func (m *AccountRewards) XXX_Size() int {
	return xxx_messageInfo_AccountRewards.Size(m)
}
func (m *AccountRewards) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountRewards.DiscardUnknown(m)
}

var xxx_messageInfo_AccountRewards proto.InternalMessageInfo

func (m *AccountRewards) GetRewards() []*Reward {
	if m != nil {
		return m.Rewards
	}
	return nil
}

type NodeStatus struct {
	Peers                uint64   `protobuf:"varint,1,opt,name=peers,proto3" json:"peers,omitempty"`
	MinPeers             uint64   `protobuf:"varint,2,opt,name=minPeers,proto3" json:"minPeers,omitempty"`
	MaxPeers             uint64   `protobuf:"varint,3,opt,name=maxPeers,proto3" json:"maxPeers,omitempty"`
	Synced               bool     `protobuf:"varint,4,opt,name=synced,proto3" json:"synced,omitempty"`
	SyncedLayer          uint64   `protobuf:"varint,5,opt,name=syncedLayer,proto3" json:"syncedLayer,omitempty"`
	CurrentLayer         uint64   `protobuf:"varint,6,opt,name=currentLayer,proto3" json:"currentLayer,omitempty"`
	VerifiedLayer        uint64   `protobuf:"varint,7,opt,name=verifiedLayer,proto3" json:"verifiedLayer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeStatus) Reset()         { *m = NodeStatus{} }
func (m *NodeStatus) String() string { return proto.CompactTextString(m) }
func (*NodeStatus) ProtoMessage()    {}
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_73d5f8b3ab148d35, []int{19}
}

func (m *NodeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeStatus.Unmarshal(m, b)
}
func (m *NodeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeStatus.Marshal(b, m, deterministic)
}
func (m *NodeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStatus.Merge(m, src)
}
func (m *NodeStatus) XXX_Size() int {
	return xxx_messageInfo_NodeStatus.Size(m)
}
func (m *NodeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStatus proto.InternalMessageInfo

func (m *NodeStatus) GetPeers() uint64 {
	if m != nil {
		return m.Peers
	}
	return 0
}

func (m *NodeStatus) GetMinPeers() uint64 {
	if m != nil {
		return m.MinPeers
	}
	return 0
}

func (m *NodeStatus) GetMaxPeers() uint64 {
	if m != nil {
		return m.MaxPeers
	}
	return 0
}

func (m *NodeStatus) GetSynced() bool {
	if m != nil {
		return m.Synced
	}
	return false
}

func (m *NodeStatus) GetSyncedLayer() uint64 {
	if m != nil {
		return m.SyncedLayer
	}
	return 0
}

func (m *NodeStatus) GetCurrentLayer() uint64 {
	if m != nil {
		return m.CurrentLayer
	}
	return 0
}

func (m *NodeStatus) GetVerifiedLayer() uint64 {
	if m != nil {
		return m.VerifiedLayer
	}
	return 0
}

func init() {
	proto.RegisterEnum("pb.TxStatus", TxStatus_name, TxStatus_value)
	proto.RegisterType((*SimpleMessage)(nil), "pb.SimpleMessage")
	proto.RegisterType((*TxConfirmation)(nil), "pb.TxConfirmation")
	proto.RegisterType((*TransactionId)(nil), "pb.TransactionId")
	proto.RegisterType((*Transaction)(nil), "pb.Transaction")
	proto.RegisterType((*AccountId)(nil), "pb.AccountId")
	proto.RegisterType((*TransferFunds)(nil), "pb.TransferFunds")
	proto.RegisterType((*InitPost)(nil), "pb.InitPost")
	proto.RegisterType((*SignedTransaction)(nil), "pb.SignedTransaction")
	proto.RegisterType((*EligibleLayers)(nil), "pb.EligibleLayers")
	proto.RegisterType((*BroadcastMessage)(nil), "pb.BroadcastMessage")
	proto.RegisterType((*BinaryMessage)(nil), "pb.BinaryMessage")
	proto.RegisterType((*CommitmentSizeMessage)(nil), "pb.CommitmentSizeMessage")
	proto.RegisterType((*LogicalDriveMessage)(nil), "pb.LogicalDriveMessage")
	proto.RegisterType((*MiningStats)(nil), "pb.MiningStats")
	proto.RegisterType((*SetLogLevel)(nil), "pb.SetLogLevel")
	proto.RegisterType((*AccountTxs)(nil), "pb.AccountTxs")
	proto.RegisterType((*GetTxsSinceLayer)(nil), "pb.GetTxsSinceLayer")
	proto.RegisterType((*Reward)(nil), "pb.Reward")
	proto.RegisterType((*AccountRewards)(nil), "pb.AccountRewards")
	proto.RegisterType((*NodeStatus)(nil), "pb.NodeStatus")
}

func init() { proto.RegisterFile("api/pb/api.proto", fileDescriptor_73d5f8b3ab148d35) }

var fileDescriptor_73d5f8b3ab148d35 = []byte{
	// 1350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xcf, 0x6f, 0xdb, 0xc6,
	0x12, 0x7e, 0x92, 0x65, 0x59, 0x1a, 0x59, 0x8a, 0xbc, 0xb1, 0xfd, 0xf4, 0x94, 0xbc, 0xd6, 0xd8,
	0xc4, 0xa9, 0x9b, 0x83, 0xdd, 0xba, 0x45, 0x81, 0xf4, 0x16, 0xdb, 0xb2, 0xa1, 0xc0, 0x71, 0x0c,
	0xca, 0x39, 0xf5, 0xd2, 0x15, 0x39, 0x66, 0x16, 0x20, 0xb9, 0x04, 0xb9, 0x52, 0xe5, 0x1e, 0xdb,
	0x7b, 0x7b, 0xe8, 0x9f, 0xd6, 0x7b, 0x4f, 0xf9, 0x43, 0x8a, 0xd9, 0x25, 0x65, 0x52, 0x91, 0x13,
	0xb7, 0x37, 0xce, 0x8f, 0xfd, 0x38, 0xfc, 0xe6, 0xdb, 0x19, 0x42, 0x57, 0xc4, 0xf2, 0x20, 0x1e,
	0x1f, 0x88, 0x58, 0xee, 0xc7, 0x89, 0xd2, 0x8a, 0x55, 0xe3, 0x71, 0xff, 0xb1, 0xaf, 0x94, 0x1f,
	0x20, 0x79, 0x0f, 0x44, 0x14, 0x29, 0x2d, 0xb4, 0x54, 0x51, 0x6a, 0x33, 0xfa, 0x8f, 0xb2, 0xa8,
	0xb1, 0xc6, 0x93, 0xeb, 0x03, 0x0c, 0x63, 0x7d, 0x63, 0x83, 0x7c, 0x17, 0xda, 0x23, 0x19, 0xc6,
	0x01, 0xbe, 0xc6, 0x34, 0x15, 0x3e, 0xb2, 0x4d, 0x58, 0x9d, 0x8a, 0x60, 0x82, 0xbd, 0xca, 0x4e,
	0x65, 0xaf, 0xe9, 0x58, 0x83, 0x7f, 0x07, 0x9d, 0xab, 0xd9, 0xb1, 0x8a, 0xae, 0x65, 0x12, 0x1a,
	0xf0, 0xe5, 0x79, 0xac, 0x03, 0x55, 0xe9, 0xf5, 0xaa, 0xc6, 0x55, 0x95, 0x1e, 0xff, 0x1c, 0xda,
	0x57, 0x89, 0x88, 0x52, 0xe1, 0xd2, 0xa1, 0xa1, 0x97, 0x25, 0xd0, 0x99, 0x75, 0x93, 0xf0, 0x5b,
	0x15, 0x5a, 0x85, 0x0c, 0xb6, 0x0b, 0x35, 0x3d, 0x1b, 0xda, 0x8c, 0xd6, 0xe1, 0xc6, 0x7e, 0x3c,
	0xde, 0x2f, 0x01, 0x38, 0x26, 0xcc, 0x76, 0xa1, 0x9e, 0x62, 0xe4, 0x61, 0x62, 0xde, 0xd5, 0x3a,
	0x6c, 0x53, 0xe2, 0x4b, 0xd7, 0x55, 0x93, 0x48, 0x0f, 0x3d, 0x27, 0x0b, 0xb2, 0x2f, 0xa1, 0x91,
	0xa0, 0x8b, 0x72, 0x8a, 0x49, 0x6f, 0x65, 0x59, 0xe2, 0x3c, 0xcc, 0xb6, 0xa1, 0x2e, 0x42, 0xf2,
	0xf6, 0x6a, 0x3b, 0x95, 0xbd, 0x9a, 0x93, 0x59, 0xac, 0x0b, 0x2b, 0xd7, 0x88, 0xbd, 0x55, 0xe3,
	0xa4, 0x47, 0xf6, 0x14, 0xea, 0xa9, 0x16, 0x7a, 0x92, 0xf6, 0xea, 0x3b, 0x95, 0xbd, 0xce, 0xe1,
	0xba, 0x29, 0x72, 0x36, 0x32, 0x3e, 0x27, 0x8b, 0xb1, 0x1e, 0xac, 0x05, 0xe2, 0x06, 0x93, 0xa1,
	0xd7, 0x5b, 0x33, 0x67, 0x73, 0x93, 0x3d, 0x86, 0xa6, 0x96, 0x21, 0xa6, 0x5a, 0x84, 0x71, 0xaf,
	0x61, 0x62, 0xb7, 0x0e, 0xbe, 0x0b, 0xcd, 0x79, 0x79, 0x04, 0x22, 0x3c, 0x2f, 0xc1, 0x34, 0xcd,
	0x68, 0xce, 0x4d, 0xfe, 0x7b, 0x25, 0x63, 0xf6, 0x1a, 0x93, 0xd3, 0x49, 0xe4, 0xa5, 0x05, 0x4a,
	0x2a, 0xf7, 0xa5, 0xa4, 0xfa, 0x71, 0x4a, 0x36, 0x61, 0x35, 0x52, 0x91, 0x8b, 0x86, 0xba, 0x9a,
	0x63, 0x8d, 0xbb, 0x88, 0xe2, 0x09, 0x34, 0x86, 0x91, 0xd4, 0x97, 0x2a, 0xd5, 0x8c, 0xc3, 0x7a,
	0xa0, 0x7c, 0xe9, 0x8a, 0xe0, 0x24, 0x91, 0xd3, 0x5c, 0x23, 0x25, 0x1f, 0x7b, 0x06, 0x1d, 0x57,
	0x85, 0xa1, 0xd4, 0x21, 0x46, 0x7a, 0x24, 0x7f, 0x46, 0x53, 0x4e, 0xcd, 0x59, 0xf0, 0xb2, 0x3e,
	0x34, 0x5c, 0x25, 0xa3, 0xb1, 0x48, 0x6d, 0x21, 0x4d, 0x67, 0x6e, 0xf3, 0x27, 0xb0, 0x31, 0x92,
	0x7e, 0x84, 0x5e, 0x51, 0x42, 0x1d, 0xa8, 0xea, 0x59, 0x2e, 0x31, 0x3d, 0xe3, 0x7b, 0xd0, 0x19,
	0x04, 0xd2, 0x97, 0xe3, 0x00, 0xcf, 0xa9, 0x05, 0x29, 0x7d, 0x82, 0x69, 0x06, 0xb1, 0xba, 0x42,
	0x9f, 0x60, 0x2d, 0xfe, 0x0c, 0xba, 0x47, 0x89, 0x12, 0x9e, 0x2b, 0x52, 0x9d, 0xdf, 0x07, 0x06,
	0x35, 0x4f, 0x68, 0x91, 0x7d, 0x82, 0x79, 0xe6, 0x4f, 0xa0, 0x7d, 0x24, 0x23, 0x91, 0xdc, 0x2c,
	0x4b, 0x5a, 0xcf, 0x92, 0x5e, 0xc0, 0xd6, 0x71, 0xe9, 0x4b, 0xf2, 0xe4, 0x1d, 0x68, 0x85, 0x63,
	0x1b, 0xd2, 0x68, 0x95, 0x5e, 0x73, 0x8a, 0x2e, 0xfe, 0x02, 0x1e, 0x9e, 0x17, 0xa8, 0xca, 0x0f,
	0xde, 0x83, 0x55, 0xfe, 0x6b, 0x05, 0x5a, 0xaf, 0x65, 0x24, 0x23, 0x9f, 0xf4, 0x68, 0x64, 0x48,
	0xd5, 0x9c, 0xc8, 0x24, 0x57, 0x50, 0x66, 0x12, 0x09, 0x99, 0x8c, 0x89, 0xf7, 0xd5, 0xb9, 0x70,
	0x3f, 0xc2, 0x37, 0xf5, 0x2c, 0xc1, 0x50, 0x18, 0xfc, 0xa3, 0x1b, 0x8d, 0x69, 0xa6, 0x81, 0x05,
	0x2f, 0x1f, 0x42, 0x6b, 0x84, 0xfa, 0x5c, 0xf9, 0xe7, 0x38, 0xc5, 0x80, 0x7d, 0x06, 0x10, 0x28,
	0xdf, 0xc7, 0xe4, 0x42, 0x84, 0x79, 0xd9, 0x05, 0x0f, 0xbd, 0x32, 0xc5, 0x29, 0x26, 0x52, 0xdf,
	0x64, 0xb3, 0x63, 0x6e, 0xf3, 0x53, 0x80, 0x4c, 0x9b, 0x57, 0xb3, 0x94, 0x6e, 0xa3, 0x9e, 0xd9,
	0xb6, 0x35, 0x1d, 0x7a, 0xa4, 0x92, 0xa6, 0x22, 0x90, 0x9e, 0xd0, 0xe8, 0x99, 0xf6, 0xe6, 0x32,
	0x2a, 0x7b, 0xf9, 0x0f, 0xd0, 0x3d, 0x43, 0xc2, 0x18, 0xc9, 0xc8, 0xb5, 0x42, 0xa0, 0xba, 0x52,
	0x2d, 0x12, 0x6d, 0xcf, 0xd9, 0x46, 0x14, 0x3c, 0xec, 0x0b, 0x58, 0x13, 0xf6, 0xdd, 0xcb, 0xa7,
	0x47, 0x1e, 0xe5, 0x09, 0xd4, 0x1d, 0xfc, 0x49, 0x24, 0x1e, 0xdd, 0x99, 0xa0, 0x80, 0x66, 0x0d,
	0x6a, 0xb9, 0x56, 0x5a, 0x04, 0x36, 0x29, 0xab, 0xb0, 0xe8, 0x62, 0x5f, 0xc1, 0x43, 0x93, 0x6a,
	0xcd, 0x41, 0xaa, 0x65, 0x28, 0x74, 0x7e, 0xf3, 0x96, 0x85, 0x68, 0x24, 0x67, 0x95, 0xd8, 0x40,
	0xca, 0x9e, 0xc2, 0x5a, 0x62, 0x1f, 0x0d, 0x41, 0xad, 0x43, 0xa0, 0x72, 0x6d, 0xd4, 0xc9, 0x43,
	0xfc, 0xaf, 0x0a, 0xc0, 0x85, 0xf2, 0xd0, 0xce, 0x2b, 0x2a, 0x38, 0x46, 0x7b, 0x15, 0x4c, 0xc1,
	0xc6, 0xa0, 0x8e, 0x84, 0x32, 0xba, 0x34, 0x01, 0x5b, 0xed, 0xdc, 0x36, 0x31, 0x31, 0xb3, 0xb1,
	0x95, 0x2c, 0x96, 0xd9, 0x46, 0x54, 0x37, 0x91, 0x8b, 0x9e, 0x11, 0x46, 0xc3, 0xc9, 0x2c, 0x22,
	0xc0, 0x3e, 0x59, 0xaa, 0xed, 0x34, 0x2d, 0xba, 0x48, 0xdc, 0xee, 0x24, 0x49, 0x30, 0xca, 0xba,
	0x51, 0x37, 0x29, 0x25, 0x1f, 0x7b, 0x0a, 0x6d, 0x52, 0xc5, 0xb5, 0xcc, 0x71, 0xec, 0x64, 0x2d,
	0x3b, 0x9f, 0x7f, 0x0b, 0x8d, 0x7c, 0x1a, 0xb3, 0x75, 0x68, 0x38, 0x83, 0x57, 0x83, 0xe3, 0xab,
	0xc1, 0x49, 0xf7, 0x3f, 0xac, 0x05, 0x6b, 0x97, 0x83, 0x8b, 0x93, 0xe1, 0xc5, 0x59, 0x77, 0x85,
	0xb5, 0xa1, 0x79, 0xfc, 0xe6, 0xe2, 0x74, 0xe8, 0xbc, 0x1e, 0x9c, 0x74, 0xeb, 0x87, 0xef, 0x5b,
	0xd0, 0x1d, 0xc5, 0xc2, 0xc5, 0x10, 0xd3, 0x77, 0x23, 0x4c, 0xa6, 0xd2, 0x45, 0x36, 0x84, 0xda,
	0xc0, 0x7d, 0xa7, 0x98, 0xd9, 0x43, 0xa5, 0x3d, 0xd9, 0xff, 0xd0, 0xc5, 0x1f, 0xfd, 0xf2, 0xe7,
	0xfb, 0x3f, 0xaa, 0x5b, 0xbc, 0x7b, 0x30, 0xfd, 0xfa, 0x00, 0x67, 0x82, 0x62, 0x07, 0xe8, 0xbe,
	0x53, 0xdf, 0x57, 0x9e, 0xb3, 0x23, 0x68, 0x9c, 0xa1, 0xbe, 0x30, 0x23, 0xb4, 0x2c, 0xa3, 0x65,
	0x50, 0x9b, 0x06, 0xaa, 0xc3, 0x9b, 0x04, 0x65, 0xe6, 0x2e, 0x61, 0x9c, 0x02, 0x9c, 0xa1, 0x3e,
	0x12, 0x81, 0xb8, 0x1f, 0xca, 0xb6, 0x41, 0xe9, 0xf2, 0x16, 0xa1, 0x8c, 0xed, 0x31, 0xc2, 0x79,
	0x05, 0xad, 0x11, 0xa9, 0xdc, 0x0e, 0x0a, 0x66, 0x16, 0x58, 0x3e, 0xbb, 0x97, 0xe1, 0xf4, 0x0d,
	0xce, 0x26, 0x7f, 0x40, 0x38, 0xe6, 0x7e, 0x84, 0xe6, 0x24, 0x61, 0x8d, 0xa0, 0x43, 0xf7, 0xaa,
	0x30, 0x7f, 0x3f, 0x5c, 0xda, 0xfd, 0x07, 0x0b, 0x2e, 0xfe, 0x7f, 0x83, 0xf8, 0x5f, 0xce, 0x08,
	0xd1, 0x47, 0xad, 0x6f, 0x63, 0x04, 0xfa, 0x23, 0x6c, 0x8c, 0x26, 0xe3, 0x50, 0x96, 0x70, 0xb7,
	0x6c, 0x61, 0x0b, 0xe3, 0xbe, 0xcf, 0xec, 0xfa, 0x2d, 0xfe, 0x9c, 0xf0, 0x1d, 0x03, 0xdf, 0xe7,
	0x5b, 0xa6, 0x60, 0x83, 0xb4, 0xf0, 0x86, 0x0b, 0x68, 0xce, 0x47, 0x3d, 0xdb, 0x24, 0x88, 0xc5,
	0xc9, 0xbf, 0x8c, 0x88, 0x9e, 0xc1, 0x65, 0xbc, 0x6d, 0x08, 0xcd, 0x0f, 0x58, 0x1a, 0xda, 0x73,
	0x80, 0x4b, 0x85, 0xda, 0xb2, 0x50, 0xda, 0x12, 0xcb, 0x00, 0x1f, 0x1b, 0xc0, 0x6d, 0xbe, 0x51,
	0x02, 0x8c, 0x15, 0x1a, 0x50, 0x07, 0xba, 0x23, 0xd4, 0x2f, 0xcd, 0xbd, 0x7d, 0x69, 0x17, 0xff,
	0x3d, 0xba, 0x5e, 0xc2, 0x4c, 0x51, 0x0b, 0x73, 0x9e, 0x7e, 0x1c, 0x08, 0xf3, 0x8d, 0xe9, 0x57,
	0x71, 0x45, 0x6c, 0xef, 0xdb, 0x1f, 0xc4, 0xfd, 0xfc, 0x07, 0x71, 0x7f, 0x40, 0x3f, 0x88, 0xb6,
	0x69, 0x85, 0xc4, 0xb2, 0x28, 0x69, 0x5b, 0xa4, 0xb6, 0xc8, 0xb6, 0x11, 0xf6, 0x7c, 0xa2, 0xdc,
	0x85, 0xd7, 0x21, 0xbc, 0xdb, 0x3c, 0xfe, 0x3f, 0x03, 0xf7, 0x90, 0x77, 0xac, 0xc6, 0x3d, 0xb4,
	0x0b, 0xe8, 0x56, 0x54, 0x67, 0x18, 0x61, 0x2a, 0xd3, 0x2b, 0x19, 0xe2, 0x9d, 0xa0, 0x9f, 0x52,
	0xbd, 0x6f, 0x31, 0x08, 0x54, 0xc0, 0xc6, 0x19, 0xea, 0xb7, 0xb1, 0xab, 0x42, 0x19, 0xf9, 0x96,
	0xd5, 0x3b, 0x71, 0x8d, 0xaa, 0xca, 0xbf, 0x0d, 0x65, 0x55, 0xf9, 0xa8, 0x27, 0x19, 0x94, 0x25,
	0x98, 0x5e, 0x71, 0x09, 0x1d, 0xbb, 0xf7, 0x7c, 0x4c, 0xec, 0xea, 0x33, 0x24, 0x16, 0x76, 0xe1,
	0x27, 0xaf, 0x97, 0x5d, 0x8b, 0x01, 0xe5, 0x5a, 0x44, 0x62, 0xb7, 0xb0, 0x01, 0x8d, 0x56, 0x17,
	0x37, 0x99, 0xe5, 0xf6, 0x36, 0xab, 0xcc, 0x6d, 0xb6, 0xa5, 0xf4, 0xcc, 0xd4, 0xf8, 0xd6, 0xd0,
	0xb0, 0xb0, 0x3a, 0x16, 0x54, 0xc5, 0x0a, 0x66, 0x96, 0x52, 0xbe, 0xb2, 0x19, 0x64, 0xb6, 0x53,
	0x6c, 0xa1, 0x4d, 0x07, 0x53, 0xb4, 0xff, 0x7f, 0xff, 0xa0, 0x5b, 0xa5, 0x2b, 0x95, 0x10, 0x42,
	0xac, 0xf2, 0x2b, 0xb5, 0x7e, 0x86, 0x9a, 0xc4, 0x82, 0x8e, 0x52, 0xff, 0x1e, 0x94, 0x64, 0x85,
	0x89, 0x52, 0x04, 0x3a, 0xae, 0x9b, 0xc3, 0xdf, 0xfc, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x57,
	0x8c, 0xd9, 0x49, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SpacemeshServiceClient is the client API for SpacemeshService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SpacemeshServiceClient interface {
	Echo(ctx context.Context, in *SimpleMessage, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetNonce(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetBalance(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*SimpleMessage, error)
	StartMining(ctx context.Context, in *InitPost, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetTransaction(ctx context.Context, in *TransactionId, opts ...grpc.CallOption) (*Transaction, error)
	SubmitTransaction(ctx context.Context, in *SignedTransaction, opts ...grpc.CallOption) (*TxConfirmation, error)
	Broadcast(ctx context.Context, in *BroadcastMessage, opts ...grpc.CallOption) (*SimpleMessage, error)
	BroadcastPoet(ctx context.Context, in *BinaryMessage, opts ...grpc.CallOption) (*SimpleMessage, error)
	SetAwardsAddress(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetMiningStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MiningStats, error)
	GetNodeStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*NodeStatus, error)
	GetGenesisTime(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetUpcomingAwards(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*EligibleLayers, error)
	SetLoggerLevel(ctx context.Context, in *SetLogLevel, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetAccountTxs(ctx context.Context, in *GetTxsSinceLayer, opts ...grpc.CallOption) (*AccountTxs, error)
	GetAccountRewards(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*AccountRewards, error)
	ResetPost(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetStateRoot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SimpleMessage, error)
}

type spacemeshServiceClient struct {
	cc *grpc.ClientConn
}

func NewSpacemeshServiceClient(cc *grpc.ClientConn) SpacemeshServiceClient {
	return &spacemeshServiceClient{cc}
}

func (c *spacemeshServiceClient) Echo(ctx context.Context, in *SimpleMessage, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetNonce(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetNonce", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetBalance(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) StartMining(ctx context.Context, in *InitPost, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/StartMining", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetTransaction(ctx context.Context, in *TransactionId, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) SubmitTransaction(ctx context.Context, in *SignedTransaction, opts ...grpc.CallOption) (*TxConfirmation, error) {
	out := new(TxConfirmation)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/SubmitTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) Broadcast(ctx context.Context, in *BroadcastMessage, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/Broadcast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) BroadcastPoet(ctx context.Context, in *BinaryMessage, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/BroadcastPoet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) SetAwardsAddress(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/SetAwardsAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetMiningStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MiningStats, error) {
	out := new(MiningStats)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetMiningStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetNodeStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*NodeStatus, error) {
	out := new(NodeStatus)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetNodeStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetGenesisTime(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetGenesisTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetUpcomingAwards(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*EligibleLayers, error) {
	out := new(EligibleLayers)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetUpcomingAwards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) SetLoggerLevel(ctx context.Context, in *SetLogLevel, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/SetLoggerLevel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetAccountTxs(ctx context.Context, in *GetTxsSinceLayer, opts ...grpc.CallOption) (*AccountTxs, error) {
	out := new(AccountTxs)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetAccountTxs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetAccountRewards(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*AccountRewards, error) {
	out := new(AccountRewards)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetAccountRewards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) ResetPost(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/ResetPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetStateRoot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetStateRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpacemeshServiceServer is the server API for SpacemeshService service.
type SpacemeshServiceServer interface {
	Echo(context.Context, *SimpleMessage) (*SimpleMessage, error)
	GetNonce(context.Context, *AccountId) (*SimpleMessage, error)
	GetBalance(context.Context, *AccountId) (*SimpleMessage, error)
	StartMining(context.Context, *InitPost) (*SimpleMessage, error)
	GetTransaction(context.Context, *TransactionId) (*Transaction, error)
	SubmitTransaction(context.Context, *SignedTransaction) (*TxConfirmation, error)
	Broadcast(context.Context, *BroadcastMessage) (*SimpleMessage, error)
	BroadcastPoet(context.Context, *BinaryMessage) (*SimpleMessage, error)
	SetAwardsAddress(context.Context, *AccountId) (*SimpleMessage, error)
	GetMiningStats(context.Context, *empty.Empty) (*MiningStats, error)
	GetNodeStatus(context.Context, *empty.Empty) (*NodeStatus, error)
	GetGenesisTime(context.Context, *empty.Empty) (*SimpleMessage, error)
	GetUpcomingAwards(context.Context, *empty.Empty) (*EligibleLayers, error)
	SetLoggerLevel(context.Context, *SetLogLevel) (*SimpleMessage, error)
	GetAccountTxs(context.Context, *GetTxsSinceLayer) (*AccountTxs, error)
	GetAccountRewards(context.Context, *AccountId) (*AccountRewards, error)
	ResetPost(context.Context, *empty.Empty) (*SimpleMessage, error)
	GetStateRoot(context.Context, *empty.Empty) (*SimpleMessage, error)
}

// UnimplementedSpacemeshServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSpacemeshServiceServer struct {
}

func (*UnimplementedSpacemeshServiceServer) Echo(ctx context.Context, req *SimpleMessage) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Echo not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetNonce(ctx context.Context, req *AccountId) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNonce not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetBalance(ctx context.Context, req *AccountId) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedSpacemeshServiceServer) StartMining(ctx context.Context, req *InitPost) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartMining not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetTransaction(ctx context.Context, req *TransactionId) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransaction not implemented")
}
func (*UnimplementedSpacemeshServiceServer) SubmitTransaction(ctx context.Context, req *SignedTransaction) (*TxConfirmation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitTransaction not implemented")
}
func (*UnimplementedSpacemeshServiceServer) Broadcast(ctx context.Context, req *BroadcastMessage) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Broadcast not implemented")
}
func (*UnimplementedSpacemeshServiceServer) BroadcastPoet(ctx context.Context, req *BinaryMessage) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BroadcastPoet not implemented")
}
func (*UnimplementedSpacemeshServiceServer) SetAwardsAddress(ctx context.Context, req *AccountId) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAwardsAddress not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetMiningStats(ctx context.Context, req *empty.Empty) (*MiningStats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMiningStats not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetNodeStatus(ctx context.Context, req *empty.Empty) (*NodeStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeStatus not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetGenesisTime(ctx context.Context, req *empty.Empty) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGenesisTime not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetUpcomingAwards(ctx context.Context, req *empty.Empty) (*EligibleLayers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUpcomingAwards not implemented")
}
func (*UnimplementedSpacemeshServiceServer) SetLoggerLevel(ctx context.Context, req *SetLogLevel) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetLoggerLevel not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetAccountTxs(ctx context.Context, req *GetTxsSinceLayer) (*AccountTxs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountTxs not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetAccountRewards(ctx context.Context, req *AccountId) (*AccountRewards, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountRewards not implemented")
}
func (*UnimplementedSpacemeshServiceServer) ResetPost(ctx context.Context, req *empty.Empty) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetPost not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetStateRoot(ctx context.Context, req *empty.Empty) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStateRoot not implemented")
}

func RegisterSpacemeshServiceServer(s *grpc.Server, srv SpacemeshServiceServer) {
	s.RegisterService(&_SpacemeshService_serviceDesc, srv)
}

func _SpacemeshService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SimpleMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).Echo(ctx, req.(*SimpleMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetNonce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetNonce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetNonce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetNonce(ctx, req.(*AccountId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetBalance(ctx, req.(*AccountId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_StartMining_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitPost)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).StartMining(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/StartMining",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).StartMining(ctx, req.(*InitPost))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetTransaction(ctx, req.(*TransactionId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_SubmitTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignedTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).SubmitTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/SubmitTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).SubmitTransaction(ctx, req.(*SignedTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_Broadcast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BroadcastMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).Broadcast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/Broadcast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).Broadcast(ctx, req.(*BroadcastMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_BroadcastPoet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BinaryMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).BroadcastPoet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/BroadcastPoet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).BroadcastPoet(ctx, req.(*BinaryMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_SetAwardsAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).SetAwardsAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/SetAwardsAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).SetAwardsAddress(ctx, req.(*AccountId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetMiningStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetMiningStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetMiningStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetMiningStats(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetNodeStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetNodeStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetNodeStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetNodeStatus(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetGenesisTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetGenesisTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetGenesisTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetGenesisTime(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetUpcomingAwards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetUpcomingAwards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetUpcomingAwards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetUpcomingAwards(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_SetLoggerLevel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetLogLevel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).SetLoggerLevel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/SetLoggerLevel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).SetLoggerLevel(ctx, req.(*SetLogLevel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetAccountTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTxsSinceLayer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetAccountTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetAccountTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetAccountTxs(ctx, req.(*GetTxsSinceLayer))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetAccountRewards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetAccountRewards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetAccountRewards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetAccountRewards(ctx, req.(*AccountId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_ResetPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).ResetPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/ResetPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).ResetPost(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetStateRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetStateRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetStateRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetStateRoot(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _SpacemeshService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SpacemeshService",
	HandlerType: (*SpacemeshServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _SpacemeshService_Echo_Handler,
		},
		{
			MethodName: "GetNonce",
			Handler:    _SpacemeshService_GetNonce_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _SpacemeshService_GetBalance_Handler,
		},
		{
			MethodName: "StartMining",
			Handler:    _SpacemeshService_StartMining_Handler,
		},
		{
			MethodName: "GetTransaction",
			Handler:    _SpacemeshService_GetTransaction_Handler,
		},
		{
			MethodName: "SubmitTransaction",
			Handler:    _SpacemeshService_SubmitTransaction_Handler,
		},
		{
			MethodName: "Broadcast",
			Handler:    _SpacemeshService_Broadcast_Handler,
		},
		{
			MethodName: "BroadcastPoet",
			Handler:    _SpacemeshService_BroadcastPoet_Handler,
		},
		{
			MethodName: "SetAwardsAddress",
			Handler:    _SpacemeshService_SetAwardsAddress_Handler,
		},
		{
			MethodName: "GetMiningStats",
			Handler:    _SpacemeshService_GetMiningStats_Handler,
		},
		{
			MethodName: "GetNodeStatus",
			Handler:    _SpacemeshService_GetNodeStatus_Handler,
		},
		{
			MethodName: "GetGenesisTime",
			Handler:    _SpacemeshService_GetGenesisTime_Handler,
		},
		{
			MethodName: "GetUpcomingAwards",
			Handler:    _SpacemeshService_GetUpcomingAwards_Handler,
		},
		{
			MethodName: "SetLoggerLevel",
			Handler:    _SpacemeshService_SetLoggerLevel_Handler,
		},
		{
			MethodName: "GetAccountTxs",
			Handler:    _SpacemeshService_GetAccountTxs_Handler,
		},
		{
			MethodName: "GetAccountRewards",
			Handler:    _SpacemeshService_GetAccountRewards_Handler,
		},
		{
			MethodName: "ResetPost",
			Handler:    _SpacemeshService_ResetPost_Handler,
		},
		{
			MethodName: "GetStateRoot",
			Handler:    _SpacemeshService_GetStateRoot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/pb/api.proto",
}
